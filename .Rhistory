knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
galaxy <- readr::read_delim("galaxies.csv", delim = ",", col_types = readr::cols())
beta_est <- function(x, y) sum(y)/sum(x)
View(galaxy)
plot(galaxy$d, galaxy$v)
velocity <- galaxy$v
distance <- galaxy$d
calc_beta <- function(x, y) sum(y)/sum(x)
calc_beta(distance, velocity)
str(galaxy)
View(galaxy)
galaxy <- readr::read_delim("galaxies.csv", delim = "\t", col_types = readr::cols())
View(galaxy)
str(galaxy)
galaxy <- readr::read_delim("galaxies.csv", delim = ",", col_types = readr::cols())
galaxy <- readr::read_delim("galaxies.csv", delim = ",", col_types = "ccdddddddd")
galaxy <- readr::read_delim("galaxies.csv", delim = ",", col_types = readr::cols())
velocity <- galaxy$v %>% as.numeric()
distance <- galaxy$d %>% as.numeric()
calc_beta <- function(x, y) sum(y)/sum(x)
calc_beta(distance, velocity)
beta_est <- calc_beta(x, y)
calc_alpha <- function(x, y) {
beta_est <- calc_beta(x, y)
mean(1/x*(y - beta_est)^2)
}
calc_alpha(distance, velocity)
calc_alpha <- function(x, y) {
beta_est <- calc_beta(x, y)
mean(1/x*(y - beta_est*x)^2)
}
calc_alpha(distance, velocity)
set.seed(1)
N <- 1e4
epsilon <- rnorm(length(velocity), mean = 0, sd = calc_alpha(distance, velocity)*distance)
epsilon
galaxy <- readr::read_delim("galaxies.csv", delim = ",", col_types = readr::cols())
velocity <- galaxy$v %>% as.numeric()
distance <- galaxy$d %>% as.numeric()
calc_beta <- function(x, y) sum(y)/sum(x)
calc_alpha <- function(x, y) {
beta_est <- calc_beta(x, y)
mean(1/x*(y - beta_est*x)^2)
}
epsilon <- rnorm(length(velocity), mean = 0, sd = calc_alpha(distance, velocity)*distance)
N <- 1e4
set.seed(1)
dat <- galaxy
n <- nrow(dat)
beta <- mean(dat$v)/mean(dat$d)
dat <- galaxy
dat$v <- as.numeric(dat$v)
dat$d <- as.numeric(dat$d)
n <- nrow(dat)
beta <- mean(dat$v)/mean(dat$d)
sigma2 <- sum( (1/dat$d) * (dat$v-beta*dat$d)^2)/n
dat <- galaxy
dat$v <- as.numeric(dat$v)
dat$d <- as.numeric(dat$d)
n <- nrow(dat)
beta <- mean(dat$v)/mean(dat$d)
sigma2 <- sum( (1/dat$d) * (dat$v-beta*dat$d)^2)/n
mystat <- function(dat, beta, sigma2) {
n <- nrow(dat)
v <- beta*dat$d + sqrt(sigma2*dat$d)*rnorm(n)
betahat <- mean(v)/mean(dat$d)
sigma2hat <- sum( (1/dat$d)*(v-betahat*dat$d)^2)/n
return(c(betahat, sigma2hat))
}
set.seed(-1)
B <- 999
statval <- c(beta, sigma2)
statmat <- sapply(1:B, function(i) mystat(dat, beta, sigma2))
beta
sigma2
n <- nrow(dat)
v <- beta*dat$d + sqrt(sigma2*dat$d)*rnorm(n)
set.seed(-1)
v <- beta*dat$d + sqrt(sigma2*dat$d)*rnorm(n)
set.seed(-1)
v <- beta*dat$d + rnorm(n, sd = sigma2*dat$d)
set.seed(-1)
v1 <- beta*dat$d + sqrt(sigma2*dat$d)*rnorm(n)
set.seed(-1)
v2 <- beta*dat$d + rnorm(n, sd = sigma2*dat$d)
set.seed(-1)
v1 <- beta*dat$d + sqrt(sigma2*dat$d)*rnorm(n)
set.seed(-1)
v2 <- beta*dat$d + rnorm(n, sd = sqrt(sigma2*dat$d))
N <- 1e4
set.seed(-1)
calc_beta <- function(x, y) sum(y)/sum(x)
calc_sigma <- function(x, y) {
beta_est <- calc_beta(x, y)
mean(1/x*(y - beta_est*x)^2)
}
epsilon <- rnorm(length(velocity), mean = 0, sd = calc_sigma(distance, velocity)*distance)
beta_est <- calc_beta(distance, velocity)
sigma_est <- calc_sigma(distance, velocity)
n <- length(distance)
N <- 1e4
set.seed(-1)
bootstrap_velocity <- 1:N %>%
lapply(function(i) beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance)))
View(bootstrap_velocity)
calc_beta <- function(x, y) sum(y)/sum(x)
calc_beta <- function(v, d) sum(v)/sum(d)
calc_beta <- function(v, d) sum(v)/sum(d)
calc_sigma <- function(v, d) {
beta_est <- calc_beta(v, d)
mean(1/d*(v - beta_est*d)^2)
}
beta_est <- calc_beta(velocity, distance)
sigma_est <- calc_sigma(velocity, distance)
n <- length(distance)
beta_est <- calc_beta(velocity, distance)
sigma_est <- calc_sigma(velocity, distance)
N <- 1e4
set.seed(-1)
bootstrap_velocity <- 1:N %>%
lapply(function(i) beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance)))
bootstrap_beta <- bootstrap_velocity %>%
sapply(calc_beta, distance)
View(bootstrap_velocity)
set.seed(-1)
v1 <- beta*dat$d + sqrt(sigma2*dat$d)*rnorm(n)
betahat <- mean(v)/mean(dat$d)
set.seed(-1)
v1 <- beta*dat$d + sqrt(sigma2*dat$d)*rnorm(n)
betahat <- mean(v1)/mean(dat$d)
v1 <- beta*dat$d + sqrt(sigma2*dat$d)*rnorm(n)
betahat <- mean(v1)/mean(dat$d)
v1 <- beta*dat$d + sqrt(sigma2*dat$d)*rnorm(n)
betahat <- mean(v1)/mean(dat$d)
v1 <- beta*dat$d + sqrt(sigma2*dat$d)*rnorm(n)
betahat <- mean(v1)/mean(dat$d)
calc_velocity <- function(i, beta_est, velocity, distance)
calc_velocity <- function(i, beta_est, velocity, distance)
beta_est*distance + rnorm(length(distance), sd = sqrt(sigma_est * distance))
N <- 1e4
set.seed(-1)
bootstrap_velocity1 <- 1:N %>%
lapply(calc_velocity, beta_est, velocity, distance)
View(bootstrap_velocity1)
View(bootstrap_velocity)
calc_velocity <- function(i, beta_est, velocity, distance)
beta_est*distance + rnorm(length(distance), sd = sqrt(sigma_est * distance))
N <- 1e4
set.seed(-1)
bootstrap_velocity1 <- 1:N %>%
lapply(calc_velocity, beta_est, velocity, distance)
View(bootstrap_velocity1)
N <- 1e4
set.seed(-1)
bootstrap_velocity <- 1:N %>%
lapply(function(i) beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance)))
View(bootstrap_velocity1)
N <- 1e4
set.seed(-1)
bootstrap_velocity1 <- 1:N %>%
lapply(function(i) beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance)))
View(bootstrap_velocity1)
View(bootstrap_velocity)
View(bootstrap_velocity1)
N <- 1e4
set.seed(-1)
bootstrap_velocity <- 1:N %>%
lapply(function(i) beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance)))
View(bootstrap_velocity)
View(bootstrap_velocity1)
View(bootstrap_velocity)
bootstrap_beta <- bootstrap_velocity %>%
sapply(calc_beta, distance)
mean(bootstrap_beta)
1e4
N <- 1e4
set.seed(-1)
bootstrap_velocity <- 1:N %>%
lapply(function(i) beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance)))
bootstrap_beta <- bootstrap_velocity %>%
sapply(calc_beta, distance)
mean(bootstrap_beta)
check <- c(bootstrap_beta[1:999], beta_est)
mean(check)
beta_est + 1.96 * c(-1, 1) * sd(bootstrap_beta)
galaxy <- readr::read_delim("galaxies.csv", delim = ",", col_types = readr::cols())
velocity <- galaxy$v %>% as.numeric()
distance <- galaxy$d %>% as.numeric()
############################################
## Calculations
calc_beta <- function(v, d) sum(v)/sum(d)
calc_sigma <- function(v, d) {
beta_est <- calc_beta(v, d)
mean(1/d*(v - beta_est*d)^2)
}
############################################
n <- length(distance)
beta_est <- calc_beta(velocity, distance)
sigma_est <- calc_sigma(velocity, distance)
N <- 1e4
set.seed(-1)
bootstrap_velocity <- 1:N %>%
lapply(function(i) beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance)))
bootstrap_beta <- bootstrap_velocity %>%
sapply(calc_beta, distance)
estimate <- mean(bootstrap_beta)
ci <- beta_est + 1.96 * c(-1, 1) * sd(bootstrap_beta)
results <- c(estimate, ci)
names(results) <- c("Estimate", "Lower", "Upper")
results
galaxy <- readr::read_delim("galaxies.csv", delim = ",", col_types = readr::cols())
velocity <- galaxy$v %>% as.numeric()
distance <- galaxy$d %>% as.numeric()
############################################
## Calculations
calc_beta <- function(v, d) sum(v)/sum(d)
calc_sigma <- function(v, d) {
beta_est <- calc_beta(v, d)
mean(1/d*(v - beta_est*d)^2)
}
############################################
n <- length(distance)
beta_est <- calc_beta(velocity, distance)
sigma_est <- calc_sigma(velocity, distance)
N <- 1e4
set.seed(-1)
bootstrap_velocity <- 1:N %>%
lapply(function(i) beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance)))
bootstrap_beta <- bootstrap_velocity %>%
sapply(calc_beta, distance)
estimate <- mean(bootstrap_beta)
ci <- beta_est + 1.96 * c(-1, 1) * sd(bootstrap_beta)
results <- c(estimate, ci) %>% results(3)
galaxy <- readr::read_delim("galaxies.csv", delim = ",", col_types = readr::cols())
velocity <- galaxy$v %>% as.numeric()
distance <- galaxy$d %>% as.numeric()
############################################
## Calculations
calc_beta <- function(v, d) sum(v)/sum(d)
calc_sigma <- function(v, d) {
beta_est <- calc_beta(v, d)
mean(1/d*(v - beta_est*d)^2)
}
############################################
n <- length(distance)
beta_est <- calc_beta(velocity, distance)
sigma_est <- calc_sigma(velocity, distance)
N <- 1e4
set.seed(-1)
bootstrap_velocity <- 1:N %>%
lapply(function(i) beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance)))
bootstrap_beta <- bootstrap_velocity %>%
sapply(calc_beta, distance)
estimate <- mean(bootstrap_beta)
ci <- beta_est + 1.96 * c(-1, 1) * sd(bootstrap_beta)
results <- c(estimate, ci) %>% round(3)
names(results) <- c("Estimate", "Lower", "Upper")
results
N <- 1e4
set.seed(-1)
bootstrap_velocity <- 1:N %>%
lapply(function(i) {
beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance))})
bootstrap_beta <- bootstrap_velocity %>%
sapply(calc_beta, distance)
estimate <- mean(bootstrap_beta)
ci <- beta_est + 1.96 * c(-1, 1) * sd(bootstrap_beta)
results <- c(estimate, ci) %>% round(3)
names(results) <- c("Estimate", "Lower", "Upper")
results
library(boot)
?boot
galaxy <- readr::read_delim("galaxies.csv", delim = ",", col_types = readr::cols())
velocity <- galaxy$v %>% as.numeric()
distance <- galaxy$d
boot_beta <- function(dataset, sigma_est) {
v <- beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance))
calc_beta(v, dataset$d)
}
library(boot)
set.seed(1)
bootstrap_stats <- boot(galaxy,
sim = "parametric",
statistic = boot_beta,
R = N,
sigma_est = sigma_est)
boot_beta <- function(dataset, beta_est, sigma_est) {
v <- beta_est*distance + rnorm(n, sd = sqrt(sigma_est * distance))
calc_beta(v, dataset$d)
}
library(boot)
set.seed(1)
bootstrap_stats <- boot(galaxy,
sim = "parametric",
statistic = boot_beta,
R = N,
beta_est = beta_est,
sigma_est = sigma_est)
boot_beta <- function(dataset, beta_est, sigma_est) {
v <- beta_est*dataset$d + rnorm(n, sd = sqrt(sigma_est * dataset$d))
calc_beta(v, dataset$d)
}
library(boot)
set.seed(1)
bootstrap_stats <- boot(galaxy,
sim = "parametric",
statistic = boot_beta,
R = N,
beta_est = beta_est,
sigma_est = sigma_est)
galaxy <- readr::read_delim("galaxies.csv", delim = ",", col_types = readr::cols())
velocity <- galaxy$v %>% as.numeric()
galaxy$d <- as.numeric(galaxy$d)
distance <- galaxy$d
library(boot)
set.seed(1)
bootstrap_stats <- boot(galaxy,
sim = "parametric",
statistic = boot_beta,
R = N,
beta_est = beta_est,
sigma_est = sigma_est)
View(bootstrap_stats)
bootstrap_stats_se <- bootstrap_stats$t %>% sd()
bootstrap_stats_se <- bootstrap_stats$t %>% sd() %>% round(3)
estimate <- mean(bootstrap_stats$t)
ci <- beta_est + 1.96 * c(-1, 1) * sd(bootstrap_stats_se)
results <- c(estimate, ci) %>% round(3)
names(results) <- c("Estimate", "Lower", "Upper")
results
beta_est
ci <- beta_est + 1.96 * c(-1, 1) * bootstrap_stats_se
results <- c(estimate, ci) %>% round(3)
names(results) <- c("Estimate", "Lower", "Upper")
results
loglikelihood <- function(params, x, y) {
n <- length(x)
beta_ <- params[1]
sigma2_ <- params[2]
-(n/2)*log(2*pi*sigma2_) - 0.5 * sum(log(x)) - (1/2*sigma2_) * sum((y - beta_*x)^2 / x)
}
result <- optim(par = c(40, 250),
fn = loglikelihood,
x = distance,
y = velocity,
method = "L-BFGS_B-B",
control = list(fnscale = -1),
hessian = TRUE)
result <- optim(par = c(40, 250),
fn = loglikelihood,
x = distance,
y = velocity,
method = "L-BFGS-B",
control = list(fnscale = -1),
hessian = TRUE)
result <- optim(par = c(40, 250),
fn = loglikelihood,
x = distance, y = velocity,
lower = c(0, 250), upper = c(Inf, Inf),
method = "L-BFGS-B",
control = list(fnscale = -1),
hessian = TRUE)
View(result)
result <- optim(par = c(40, 250),
fn = loglikelihood,
x = distance, y = velocity,
lower = c(0, 25), upper = c(Inf, Inf),
method = "L-BFGS-B",
control = list(fnscale = -1),
hessian = TRUE)
View(result)
loglikelihood <- function(params, x, y) {
n <- length(x)
beta_ <- params[1]
sigma2_ <- params[2]
-(n/2)*log(2*pi*sigma2_) - 0.5 * sum(log(x)) - (1/2*sigma2_) * sum((y - beta_*x)^2 / x)
}
result <- optim(par = c(40, 250),
fn = loglikelihood,
x = distance, y = velocity,
lower = c(0, 25), upper = c(Inf, Inf),
method = "L-BFGS-B",
control = list(fnscale = -1),
hessian = TRUE)
result
result <- optim(par = c(40, 250),
fn = loglikelihood,
x = distance, y = velocity,
lower = c(0, 0.5), upper = c(Inf, Inf),
method = "L-BFGS-B",
control = list(fnscale = -1),
hessian = TRUE)
result
loglikelihood <- function(params, x, y) {
n <- length(x)
beta_ <- params[1]
sigma2_ <- params[2]
-(n/2)*log(2*pi*sigma2_) - 0.5 * sum(log(x)) - (1/(2*sigma2_)) * sum((y - beta_*x)^2 / x)
}
result <- optim(par = c(40, 250),
fn = loglikelihood,
x = distance, y = velocity,
lower = c(0, 250), upper = c(Inf, Inf),
method = "L-BFGS-B",
control = list(fnscale = -1),
hessian = TRUE)
result
opt_mle_se <- solve(-result$hessian) %>% diag() %>% sqrt() %>% round(3)
ci <- result$par[1] + c(-1, 1) * 1.96 * opt_mle_se[1]
ci <- result$par[2] + c(-1, 1) * 1.96 * opt_mle_se[2]
result$par[2]
install.packages("mixtools")
